name: Snyk Security
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
permissions:
  contents: read
jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    env:
      # Set SNYK_TOKEN at job level so it's available to all steps
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      
      # Add setup for your project's dependencies if needed
      # Uncomment and modify based on your project type:
      # For Node.js projects:
      # - uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      # - run: npm ci
      
      # For Python projects:
      # - uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.x'
      # - run: pip install -r requirements.txt
      
      # For Java projects:
      # - uses: actions/setup-java@v4
      #   with:
      #     java-version: '17'
      # - run: mvn clean compile
      
      - name: Set up Snyk CLI to check for security issues
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        
      # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
      - name: Snyk Code test
        run: snyk code test --sarif > snyk-code.sarif || true
        
      # Only run if you have dependencies to monitor
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects || true
        
      # Only run if you have Infrastructure as Code files
      - name: Snyk IaC test and report  
        run: snyk iac test --report || true
        
      # Only build and test Docker if you have a Dockerfile
      - name: Check for Dockerfile
        id: check_dockerfile
        run: |
          if [ -f "Dockerfile" ]; then
            echo "dockerfile_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dockerfile_exists=false" >> $GITHUB_OUTPUT
          fi
            
      - name: Build a Docker image
        if: steps.check_dockerfile.outputs.dockerfile_exists == 'true'
        run: docker build -t your/image-to-test .
        
      - name: Snyk Container monitor
        if: steps.check_dockerfile.outputs.dockerfile_exists == 'true'
        run: snyk container monitor your/image-to-test --file=Dockerfile || true
        
      # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
